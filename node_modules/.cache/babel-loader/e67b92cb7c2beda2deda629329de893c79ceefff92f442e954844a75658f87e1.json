{"ast":null,"code":"var _jsxFileName = \"D:\\\\smartfixapplication\\\\src\\\\signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport logo from './smartfix.png';\nimport { Link, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const handleSignup = () => {\n    if (!username || !email || !password) {\n      toast.error('Please fill in all the required fields.', {\n        position: toast.POSITION.TOP_CENTER\n      });\n      return;\n    }\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      toast.error('Please enter a valid email address.', {\n        position: toast.POSITION.TOP_CENTER\n      });\n      return;\n    }\n    if (password.length < 6) {\n      toast.error('Password should be at least 6 characters long.', {\n        position: toast.POSITION.TOP_CENTER\n      });\n      return;\n    }\n    const userData = {\n      username: username,\n      email: email,\n      password: password\n    };\n\n    // Assuming you have a separate API endpoint for signup\n    fetch('https://api.example.com/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(response => response.json()).then(data => {\n      toast.success('User registered successfully!', {\n        position: toast.POSITION.TOP_CENTER\n      });\n      history.push('/login');\n    }).catch(error => {\n      toast.error('Error occurred while registering user!', {\n        position: toast.POSITION.TOP_CENTER\n      });\n    });\n  };\n  const handleReset = () => {\n    setUsername('');\n    setEmail('');\n    setPassword('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\",\n          className: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Registration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"Username\",\n            value: username,\n            onChange: e => setUsername(e.target.value.trim())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value.trim())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-3\",\n            onClick: handleSignup,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-3\",\n            onClick: handleReset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"text\",\n            to: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Back to Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"colKH6VUx1aITx+fgU3Ue3pwp3Y=\", false, function () {\n  return [useHistory];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","logo","Link","useHistory","jsxDEV","_jsxDEV","Signup","_s","username","setUsername","email","setEmail","password","setPassword","history","handleSignup","error","position","POSITION","TOP_CENTER","emailRegex","test","length","userData","fetch","method","headers","body","JSON","stringify","then","response","json","data","success","push","catch","handleReset","children","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","value","onChange","e","target","trim","onClick","to","_c","$RefreshReg$"],"sources":["D:/smartfixapplication/src/signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport logo from './smartfix.png';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nfunction Signup() {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleSignup = () => {\r\n    if (!username || !email || !password) {\r\n      toast.error('Please fill in all the required fields.', { position: toast.POSITION.TOP_CENTER });\r\n      return;\r\n    }\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      toast.error('Please enter a valid email address.', { position: toast.POSITION.TOP_CENTER });\r\n      return;\r\n    }\r\n    if (password.length < 6) {\r\n      toast.error('Password should be at least 6 characters long.', { position: toast.POSITION.TOP_CENTER });\r\n      return;\r\n    }\r\n\r\n    const userData = {\r\n      username: username,\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    // Assuming you have a separate API endpoint for signup\r\n    fetch('https://api.example.com/signup', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(userData),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        toast.success('User registered successfully!', { position: toast.POSITION.TOP_CENTER });\r\n        history.push('/login');\r\n      })\r\n      .catch((error) => {\r\n        toast.error('Error occurred while registering user!', { position: toast.POSITION.TOP_CENTER });\r\n      });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setUsername('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <div>\r\n          <img src={logo} alt='logo' className='image' />\r\n        </div>\r\n      </header>\r\n      <body>\r\n        <div className='container'>\r\n          <h1>User Registration</h1>\r\n          <div>\r\n            <input\r\n              type='text'\r\n              name='username'\r\n              placeholder='Username'\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value.trim())}\r\n            />\r\n            <input\r\n              type='email'\r\n              name='email'\r\n              placeholder='Email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value.trim())}\r\n            />\r\n            <input\r\n              type='password'\r\n              name='password'\r\n              placeholder='Password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button className='button-3' onClick={handleSignup}>\r\n              Submit\r\n            </button>\r\n            <button className='button-3' onClick={handleReset}>\r\n              Reset\r\n            </button>\r\n            <Link className='text' to='/login'>\r\n              <h5>Back to Login</h5>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </body>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}